// Problem 1: Multiples of 3 or 5

// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.


function multiplesof3and5(num) {
    let acc = 0;
    for (let i = 0; i < num; i++) {
        if (i % 3 === 0 || i % 5 === 0) {
            acc += i;
        }
    }
    return acc;
}

console.log(multiplesof3and5(1000));

// Problem 2: Even Fibonacci Numbers

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1,2,3,5,8,13,21,34,55,89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million (4.000.000), find the sum of the even-valued terms.
function fibonacciSequenceUntilNumber(num1, num2, maxNumber) {
  let first = num1
  let sec = num2
  let arr = [first, sec]
  for (let i = 0; arr[i] < maxNumber; i++) {
    if (arr[arr.length - 1] > maxNumber) {
      arr.pop()
      // pelo método que fiz, sempre vai vir 1 número a mais (>>SEMPRE<<<) aqui eu tiro ele
      return arr
    }
    let element = num1 + num2
    arr.push(element)
    num1 = num2
    num2 = element 
  }
  console.log(arr)
}

let res = fibonacciSequenceUntilNumber(1,2, 4000000)
console.log("O array res é: ", res)

function sumEvenNumbersInFibonacci(arr) {
  let evens = arr.filter((u) => u % 2 == 0 || u == 0)
  let sum = evens.reduce((acc, curr) => acc + curr) 
  return sum
}

console.log("A soma de todos os números pares na sequencia é: ", sumEvenNumbersInFibonacci(res))



// Problem 3: Largest Prime Factor
// THe prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of the number 600851475143?

function biggestPrimeFactor(number) {
  let maxPrime = -1;

  // Dividir o número por 2 até que ele não seja mais divisível por 2 (duh!)
  while (number % 2 === 0) {
    maxPrime = 2;
    number /= 2;
  }

  // Iterar sobre os números ímpares a partir de 3. A partir de 2 todos os primos são impares
  for (let i = 3; i <= Math.sqrt(number); i += 2) {
    while (number % i === 0) {
      maxPrime = i;
      number /= i;
    }
  }

  // Se o número restante for maior que 2, ele é um fator primo
  if (number > 2) {
    maxPrime = number;
  }

  return maxPrime;
}

console.log("O maior fator primo é:", biggestPrimeFactor(600851475143));